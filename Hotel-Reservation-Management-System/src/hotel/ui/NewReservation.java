/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.ui;

import hotel.database.DatabaseConnection;
import hotel.guest.Guest;
import hotel.guest.Guests;
import hotel.iterator.Iterator;
import hotel.reservation.Reservation;
import hotel.reservation.Reservations;
import hotel.room.Room;
import hotel.room.RoomFactory;
import hotel.room.Rooms;
import hotel.ui.UIHelper.ImagePaths;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class NewReservation extends javax.swing.JFrame {

    //private String roomNumber;
    private List<Room> rooms;
    private List<Guest> guests;

    private void customizeFrameAppearance() {
        //Change the frame
        this.getContentPane().setBackground(new java.awt.Color(240, 240, 240));
        //Change frame size
        this.setSize(400, 300);
        // Change frame address
        this.setTitle("Hotel Management - New Reservation");
        //  Change the Frame Icon
        ImageIcon appIcon = new ImageIcon("src/images/check-in.png");
        this.setIconImage(appIcon.getImage());

    }

    public NewReservation() {
        customizeFrameAppearance();
        initComponents();

        fetchGuests();
        fetchRooms();
    }

    private void fetchGuests() {
        this.guests = new ArrayList<>();
        Guests guests = Guests.getInstance();
        guests.fetchAllGuests();
        Iterator<Guest> iterator = guests.createIterator();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Name");
        model.addColumn("Phone");
        model.addColumn("Email");
        model.addColumn("Nationality");
        model.addColumn("Passport Number");

        while (iterator.hasNext()) {
            Guest guest = iterator.next();
            this.guests.add(guest);

            model.addRow(new Object[]{
                guest.getId(),
                guest.getName(),
                guest.getPhone(),
                guest.getEmail(),
                guest.getNationality(),
                guest.getPassportNumber()
            });
        }

        GuestTable.setModel(model);
    }

    private void fetchRooms() {
        this.rooms = new ArrayList<>();
        Rooms rooms = Rooms.getInstance();
        rooms.fetchAvailableRooms();
        Iterator<Room> iterator = rooms.createIterator();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("Type");
        model.addColumn("Capacity");
        model.addColumn("Price Per Night");
        model.addColumn("Location");

        while (iterator.hasNext()) {
            Room room = iterator.next();
            this.rooms.add(room);

            model.addRow(new Object[]{
                room.getId(),
                room.getType(),
                room.getCapacity(),
                room.getPricePerNight(),
                room.getLocation()
            });
        }

        RoomTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomTypebuttonGroup = new javax.swing.ButtonGroup();
        Pearsonal_Data_Panel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        checkInDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        checkOutDateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        GuestTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        RoomTable = new javax.swing.JTable();
        CheckInPageLabel = new javax.swing.JLabel();
        SearchRoomButton = new javax.swing.JButton();
        backToHomeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel12.setText("Check In Date");

        checkInDateChooser.setToolTipText("1");

        jLabel13.setText("Check Out Date");

        checkOutDateChooser.setToolTipText("1");

        GuestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone", "Email", "Nationality", "Passport Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(GuestTable);

        RoomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Type", "Capacity", "Price Per Night", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(RoomTable);

        javax.swing.GroupLayout Pearsonal_Data_PanelLayout = new javax.swing.GroupLayout(Pearsonal_Data_Panel);
        Pearsonal_Data_Panel.setLayout(Pearsonal_Data_PanelLayout);
        Pearsonal_Data_PanelLayout.setHorizontalGroup(
            Pearsonal_Data_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pearsonal_Data_PanelLayout.createSequentialGroup()
                .addGroup(Pearsonal_Data_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pearsonal_Data_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkInDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Pearsonal_Data_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkOutDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(Pearsonal_Data_PanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1035, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Pearsonal_Data_PanelLayout.setVerticalGroup(
            Pearsonal_Data_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pearsonal_Data_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Pearsonal_Data_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(checkInDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Pearsonal_Data_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkOutDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );

        CheckInPageLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        CheckInPageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CheckInPageLabel.setText("New Reservation");

        SearchRoomButton.setText("Save");
        SearchRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchRoomButtonActionPerformed(evt);
            }
        });

        backToHomeButton.setText("Back");
        backToHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToHomeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backToHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(SearchRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Pearsonal_Data_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(355, 355, 355)
                .addComponent(CheckInPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(CheckInPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Pearsonal_Data_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backToHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchRoomButtonActionPerformed
        try {
            // Get Value From Buttons
            //Storing Room data from input Fields without searching for it in the database
            int selectedGuestIndex = GuestTable.getSelectedRow();
            int selectedRoomIndex = RoomTable.getSelectedRow();
            Date checkInDate = checkInDateChooser.getDate();
            Date checkOutDate = checkOutDateChooser.getDate();

            Guest guest = this.guests.get(selectedGuestIndex);
            Room room = this.rooms.get(selectedRoomIndex);

            Reservation reservation = new Reservation(guest.getId(), room.getId(), checkInDate, checkOutDate);

            reservation.addObserver(room);
            reservation.save();

            Reservations reservations = Reservations.getInstance();
            reservations.addReservation(reservation);

            JOptionPane.showMessageDialog(null, "Total is: " + reservation.getTotalPrice(), "Bill", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            ReservationsList reservationsList = new ReservationsList();
            reservationsList.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_SearchRoomButtonActionPerformed

    private void backToHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToHomeButtonActionPerformed
        // Close Check In page
        this.dispose();
        // Opening Home apge
        ReservationsList reservationsList = new ReservationsList();
        reservationsList.setVisible(true);
    }//GEN-LAST:event_backToHomeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewReservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CheckInPageLabel;
    private javax.swing.JTable GuestTable;
    private javax.swing.JPanel Pearsonal_Data_Panel;
    private javax.swing.JTable RoomTable;
    private javax.swing.JButton SearchRoomButton;
    private javax.swing.JButton backToHomeButton;
    private com.toedter.calendar.JDateChooser checkInDateChooser;
    private com.toedter.calendar.JDateChooser checkOutDateChooser;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup roomTypebuttonGroup;
    // End of variables declaration//GEN-END:variables

    private void showRoomDetailsDialogWindowActivated(ActionEvent evt, int roomNumber) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
